# This is an example of a bring your own (byo) host inventory

[OSEv3:children]
lb
masters
etcd
nodes
nfs

# Set variables common for all OSEv3 hosts
[OSEv3:vars]

###########################################################################
### Ansible Vars
###########################################################################
timeout=60

# Configuring Cluster Logging
openshift_logging_install_logging=true

# disable memory check, as we are not a production environment
openshift_disable_check=memory_availability,disk_availability

# SSH user, this user should allow ssh based auth without requiring a password.
ansible_ssh_user=ec2-user

# If ansible_ssh_user is not root, ansible_become must be set to true and the
# user must be configured for passwordless sudo
ansible_become=yes

# Debug level for all OpenShift components (Defaults to 2)
debug_level=2

# Specify the deployment type. Valid values are origin and openshift-enterprise.
openshift_deployment_type=openshift-enterprise

# Specify the generic release of OpenShift to install
openshift_release=v3.6

# Specify an exact container image tag to install or configure.
#openshift_image_tag=v3.6.0

# Specify an exact rpm version to install or configure.
#openshift_pkg_version=-3.6.0

# Skip upgrading Docker during an OpenShift upgrade, leaves the current Docker version alone.
# docker_upgrade=False

# Additional yum repos to install
#openshift_additional_repos=[{'id': 'ose-devel', 'name': 'ose-devel', 'baseurl': 'http://example.com/puddle/build/AtomicOpenShift/3.1/latest/RH7-RHOSE-3.0/$basearch/os', 'enabled': 1, 'gpgcheck': 0}]

# htpasswd auth
# Training => openshift_master_identity_providers=[{'name': 'Local Auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}, {'name': 'IPA Auth', 'challenge': 'true', 'login': 'true', 'kind': 'LDAPPasswordIdentityProvider', 'attributes': {'id': ['dn'], 'email': ['mail'], 'name': ['cn'], 'preferredUsername': ['uid']}, 'bindDN': 'uid=admin,cn=users,cn=accounts,dc=shared,dc=example,dc=opentlc,dc=com', 'bindPassword': 'r3dh4t1!', 'ca': '/etc/origin/master/ipa-ca.crt', 'insecure': 'false', 'url': 'ldaps://ipa.shared.example.opentlc.com:636/cn=users,cn=accounts,dc=shared,dc=example,dc=opentlc,dc=com?uid?sub?(memberOf=cn=ocp-users,cn=groups,cn=accounts,dc=shared,dc=example,dc=opentlc,dc=com)'}]
openshift_master_identity_providers=[{'name': 'Local Auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
# Defining htpasswd users
#openshift_master_htpasswd_users={'user1': '<pre-hashed password>', 'user2': '<pre-hashed password>'}
# or
openshift_master_htpasswd_file=/root/htpasswd.openshift

# LDAP auth
#openshift_master_identity_providers=[{'name': 'IPA Auth', 'challenge': 'true', 'login': 'true', 'kind': 'LDAPPasswordIdentityProvider', 'attributes': {'id': ['dn'], 'email': ['mail'], 'name': ['cn'], 'preferredUsername': ['uid']}, 'bindDN': 'ldaps://ipa.shared.example.opentlc.com:636/cn=users,cn=accounts,dc=shared,dc=example,dc=opentlc,dc=com?uid?sub?(memberOf=cn=ocp-users,cn=groups,cn=accounts,dc=shared,dc=example,dc=opentlc,dc=com)', 'bindPassword': 'r3dh4t1!', 'ca': '/etc/origin/master/ipa-ca.crt', 'insecure': 'false', 'url': 'ldaps://ipa.shared.example.opentlc.com:636/cn=users,cn=accounts,dc=shared,dc=example,dc=opentlc,dc=com?uid?sub?(memberOf=cn=ocp-users,cn=groups,cn=accounts,dc=shared,dc=example,dc=opentlc,dc=com)'}]
#
# Configure LDAP CA certificate
# Specify either the ASCII contents of the certificate or the path to
# the local file that will be copied to the remote host. CA
# certificate contents will be copied to master systems and saved
# within /etc/origin/master/ with a filename matching the "ca" key set
# within the LDAPPasswordIdentityProvider.
#
#openshift_master_ldap_ca=<ca text>
# or
#openshift_master_ldap_ca_file=/etc/origin/master/ipa-ca.crt

# Enable cockpit
osm_use_cockpit=true
osm_cockpit_plugins=['cockpit-kubernetes']

# Native high availability cluster method with optional load balancer.
openshift_master_cluster_method=native
openshift_master_cluster_hostname=loadbalancer1.0cbe.internal
openshift_master_cluster_public_hostname=loadbalancer.0cbe.example.opentlc.com

# default subdomain to use for exposed routes
openshift_master_default_subdomain=apps.0cbe.example.opentlc.com

# default project node selector
osm_default_node_selector='env=app'

# OpenShift Router Options
openshift_hosted_router_selector='env=infra'
# Router replicas (optional)
#openshift_hosted_router_replicas=2

# Openshift Registry Options
openshift_hosted_registry_selector='env=infra'
# Registry replicas (optional)
#openshift_hosted_registry_replicas=2

# Registry Storage Options
openshift_hosted_registry_storage_kind=nfs
openshift_hosted_registry_storage_access_modes=['ReadWriteMany']
openshift_hosted_registry_storage_nfs_directory=/exports
openshift_hosted_registry_storage_nfs_options='*(rw,root_squash)'
openshift_hosted_registry_storage_volume_name=registry
openshift_hosted_registry_storage_volume_size=10Gi

# Metrics deployment
openshift_hosted_metrics_deploy=true

openshift_hosted_metrics_storage_kind=nfs
openshift_hosted_metrics_storage_access_modes=['ReadWriteOnce']
openshift_hosted_metrics_storage_nfs_directory=/exports
openshift_hosted_metrics_storage_nfs_options='*(rw,root_squash)'
openshift_hosted_metrics_storage_volume_name=metrics
openshift_hosted_metrics_storage_volume_size=10Gi
#openshift_hosted_metrics_storage_labels={'storage': 'metrics'}

# Logging deployment
openshift_hosted_logging_deploy=true
openshift_hosted_logging_storage_kind=nfs
openshift_hosted_logging_storage_access_modes=['ReadWriteOnce']
openshift_hosted_logging_storage_nfs_directory=/exports
openshift_hosted_logging_storage_nfs_options='*(rw,root_squash)'
openshift_hosted_logging_storage_volume_name=logging
openshift_hosted_logging_storage_volume_size=10Gi
#openshift_hosted_logging_storage_labels={'storage': 'logging'}

# Additional logging settings
openshift_logging_es_cluster_size=1
openshift_logging_es_memory_limit=4G
openshift_logging_es_nodeselector={'env':'infra'}
openshift_logging_curator_nodeselector={'env':'infra'}
openshift_logging_kibana_nodeselector={'env':'infra'}

# Configure the multi-tenant SDN plugin (default is 'redhat/openshift-ovs-subnet')
os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'

# Configure master API and console ports.
#openshift_master_api_port=8443
#openshift_master_console_port=8443

# Configure custom ca certificate
openshift_master_ca_certificate={'certfile': '/root/ca.pem', 'keyfile': '/root/ca-key.pem'}
# If you would like openshift_master_named_certificates to be overwritten with
# the provided value, specify openshift_master_overwrite_named_certificates.
openshift_master_overwrite_named_certificates=true

# Force setting of system hostname when configuring OpenShift
# This works around issues related to installations that do not have valid dns
# entries for the interfaces attached to the host.
openshift_set_hostname=True

# Configure node kubelet arguments. pods-per-core is valid in OpenShift Origin 1.3 or OpenShift Container Platform 3.3 and later.
openshift_node_kubelet_args={'pods-per-core': ['10'], 'max-pods': ['250'], 'image-gc-high-threshold': ['85'], 'image-gc-low-threshold': ['75']}

# Configure logrotate scripts
#logrotate_scripts=[{"name": "syslog", "path": "/var/log/cron\n/var/log/maillog\n/var/log/messages\n/var/log/secure\n/var/log/spooler\n", "options": ["daily", "rotate 7", "compress", "sharedscripts", "missingok"], "scripts": {"postrotate": "/bin/kill -HUP `cat /var/run/syslogd.pid 2> /dev/null` 2> /dev/null || true"}}]
logrotate_scripts=[{"name": "syslog", "path": "/var/log/cron\n/var/log/maillog\n/var/log/messages\n/var/log/secure\n/var/log/spooler\n", "options": ["daily", "rotate 7","size 500M", "compress", "sharedscripts", "missingok"], "scripts": {"postrotate": "/bin/kill -HUP `cat /var/run/syslogd.pid 2> /dev/null` 2> /dev/null || true"}}]

###########################################################################
### OpenShift Service Catalog Vars
###########################################################################

#openshift_enable_service_catalog=true
#template_service_broker_install=true
#openshift_template_service_broker_namespaces=['openshift']

# host group for masters

[lb]
#ose3-lb-ansible.test.example.com containerized=false
loadbalancer1.0cbe.internal host_zone=eu-central-1a

[masters]
#ose3-master[1:3]-ansible.test.example.com
master1.0cbe.internal host_zone=eu-central-1a
master2.0cbe.internal host_zone=eu-central-1a
master3.0cbe.internal host_zone=eu-central-1a

[etcd]
#ose3-etcd[1:3]-ansible.test.example.com
master1.0cbe.internal host_zone=eu-central-1a
master2.0cbe.internal host_zone=eu-central-1a
master3.0cbe.internal host_zone=eu-central-1a

[nodes]
#ose3-master[1:3]-ansible.test.example.com
#ose3-node[1:2]-ansible.test.example.com openshift_node_labels="{'region': 'primary', 'zone': 'default'}"

## These are the masters
master1.0cbe.internal openshift_hostname=master1.0cbe.internal ansible_ssh_user=ec2-user ansible_ssh_private_key_file=~/.ssh/ocpkey.pem openshift_node_labels="{'logging':'true','openshift_schedulable':'False','cluster': '0cbe', 'zone': 'eu-central-1a'}"
master2.0cbe.internal openshift_hostname=master2.0cbe.internal ansible_ssh_user=ec2-user ansible_ssh_private_key_file=~/.ssh/ocpkey.pem openshift_node_labels="{'logging':'true','openshift_schedulable':'False','cluster': '0cbe', 'zone': 'eu-central-1a'}"
master3.0cbe.internal openshift_hostname=master3.0cbe.internal ansible_ssh_user=ec2-user ansible_ssh_private_key_file=~/.ssh/ocpkey.pem openshift_node_labels="{'logging':'true','openshift_schedulable':'False','cluster': '0cbe', 'zone': 'eu-central-1a'}"

## These are infranodes
infranode1.0cbe.internal openshift_hostname=infranode1.0cbe.internal  ansible_ssh_user=ec2-user ansible_ssh_private_key_file=~/.ssh/ocpkey.pem openshift_node_labels="{'logging':'true','cluster': '0cbe', 'env':'infra', 'zone': 'eu-central-1a'}"
infranode2.0cbe.internal openshift_hostname=infranode2.0cbe.internal  ansible_ssh_user=ec2-user ansible_ssh_private_key_file=~/.ssh/ocpkey.pem openshift_node_labels="{'logging':'true','cluster': '0cbe', 'env':'infra', 'zone': 'eu-central-1a'}"

## These are regular nodes
node1.0cbe.internal openshift_hostname=node1.0cbe.internal  ansible_ssh_user=ec2-user ansible_ssh_private_key_file=~/.ssh/ocpkey.pem openshift_node_labels="{'logging':'true','cluster': '0cbe', 'env':'app', 'zone': 'eu-central-1a'}"
node2.0cbe.internal openshift_hostname=node2.0cbe.internal  ansible_ssh_user=ec2-user ansible_ssh_private_key_file=~/.ssh/ocpkey.pem openshift_node_labels="{'logging':'true','cluster': '0cbe', 'env':'app', 'zone': 'eu-central-1a'}"
node3.0cbe.internal openshift_hostname=node3.0cbe.internal  ansible_ssh_user=ec2-user ansible_ssh_private_key_file=~/.ssh/ocpkey.pem openshift_node_labels="{'logging':'true','cluster': '0cbe', 'env':'app', 'zone': 'eu-central-1a'}"

[nfs]
support1.0cbe.internal openshift_hostname=support1.0cbe.internal  ansible_ssh_user=ec2-user ansible_ssh_private_key_file=~/.ssh/ocpkey.pem